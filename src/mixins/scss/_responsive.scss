@import '../../base/scss/_variables';

$maxWidth: $layout-width;
$maxWidthContainer: $container-width-no-units;

// Adaptive font-size.
// $startSize - initial size
// $mobileSize - 320px size
@mixin adaptive-font($startSize, $mobileSize, $important: '') {
  $additionalSize: $startSize - $mobileSize;
  $additionalMobileSize: $additionalSize + ($additionalSize * 0.7);

  @media (max-width: 767px) {
    font-size: calc(
        #{$mobileSize + px} + #{$additionalMobileSize} * ((100vw - 320px) / #{$maxWidth})
      ) + #{$important};
  }

  @media (min-width: 767px) {
    font-size: calc(#{$mobileSize + px} + #{$additionalSize} * (100vw / #{$maxWidth})) + #{$important};
  }
}

// Responsive adaptive of values
// $property - any CSS property
// $startSize - initial size
// $minSize - 320px size
@mixin adaptive-value($property, $startSize, $minSize, $type: 0) {
  $additionalSize: $startSize - $minSize;

  @if $type == 1 {
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$additionalSize} * ((100vw - 320px) / #{$maxWidthContainer - 320})
      );
    }
  } @else if $type == 2 {
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$additionalSize} + ((100vw - 320px) / #{$maxWidth - 320})
      );
    }
  } @else {
    #{$property}: calc(
      #{$minSize + px} + #{$additionalSize} * ((100vw - 320px) / #{$maxWidth - 320})
    );
  }
}
